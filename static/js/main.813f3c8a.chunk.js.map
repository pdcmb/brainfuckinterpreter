{"version":3,"sources":["components/TabPanel.js","components/UploadButton.js","components/CommandsTable.js","components/InputDialog.js","components/App.js","serviceWorker.js","index.js"],"names":["TabPanel","props","children","value","index","rest","Box","styles","makeStyles","theme","input","display","UploadButton","accept","color","variant","onChange","classes","className","id","type","htmlFor","Button","startIcon","component","commands","character","meaning","CommandsTable","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","command","key","scope","InputDialog","open","onClose","onInputAccept","useState","setValue","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","event","target","margin","label","fullWidth","DialogActions","onClick","root","height","breakpoints","down","flexDirection","paddingBottom","spacing","editorPanel","flex","sidePanel","buttons","width","marginRight","fab","position","bottom","right","alignItems","options","bottomNavigation","zIndex","appBar","cleanup","code","match","join","App","prefersDarkMode","useMediaQuery","useDarkTheme","setUseDarkTheme","useMemo","createMuiTheme","palette","primary","main","secondary","shape","borderRadius","overrides","MuiCssBaseline","html","overflowY","isSmDevice","setCode","setInput","output","setOutput","dynamicMemory","setDynamicMemory","promptInput","setPromptInput","cellsNumber","setCellsNumber","sideTab","setSideTab","renderView","setRenderView","inputSize","setInputSize","outputSize","setOutputSize","isInputDialogOpen","setIsInputDialogOpen","run","useCallback","length","memorySize","bracemap","temp_bracestack","charAt","push","start","pop","buildbracemap","cells","cellptr","codeptr","inputptr","concat","String","fromCharCode","charCodeAt","evaluate","useEffect","rows","multiline","e","helperText","file","files","reader","FileReader","onload","a","result","readAsText","InputProps","readOnly","Tooltip","title","aria-label","Fab","optionsPanel","Typography","Divider","FormControlLabel","control","Checkbox","checked","disabled","Switch","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","newValue","mainView","ThemeProvider","CssBaseline","Container","Tabs","indicatorColor","Tab","BottomNavigation","showLabels","BottomNavigationAction","icon","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.813f3c8a.chunk.js","sourcesContent":["import React from 'react'\nimport { Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...rest } = props;\n    if(value === index)\n        return (<Box {...rest}>{children}</Box>)\n    else return ''\n        \n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n","import React, { Fragment } from 'react'\nimport {Button, makeStyles} from '@material-ui/core'\nimport PublishIcon from '@material-ui/icons/Publish';\n\nconst styles = makeStyles(theme => ({\n    input:{\n        display: 'none',\n    }\n}))\n\nexport default function UploadButton(props) {\n    const {accept, children, color, variant, onChange, ...rest} = props\n    const classes = styles()\n    return (\n        <Fragment>\n            <input\n                accept={accept}\n                className={classes.input}\n                onChange={onChange}\n                id=\"contained-button-file\"\n                type=\"file\"\n                {...rest}\n            />\n            <label htmlFor=\"contained-button-file\">\n                <Button \n                    variant={variant} \n                    color={color}\n                    startIcon={<PublishIcon />}\n                    component=\"span\">\n                    {children}\n                </Button>\n            </label>\n        </Fragment>\n\n    )\n}\n","import React from 'react'\nimport { Table, TableCell, TableRow, TableBody, TableHead, TableContainer,\n        Paper } from '@material-ui/core'\n\nconst commands = [\n    { \n        character: '>',\n        meaning: 'Increment the data pointer (to point to the next cell to the right).'\n    },\n    { \n        character: '<',\n        meaning: 'Decrement the data pointer (to point to the next cell to the left).'\n    },\n    { \n        character: '+',\n        meaning: 'Increment (increase by one) the byte at the data pointer.'\n    },\n    { \n        character: '-',\n        meaning: 'Decrement (decrease by one) the byte at the data pointer.'\n    },\n    { \n        character: '.',\n        meaning: 'Output the byte at the data pointer.'\n    },\n    { \n        character: ',',\n        meaning: 'Accept one byte of input, storing its value in the byte at the data pointer.'\n    },\n    { \n        character: '[',\n        meaning: 'If the byte at the data pointer is zero, then instead of moving the instruction pointer forward to the next command, jump it forward to the command after the matching ] command'\n    },\n    { \n        character: ']',\n        meaning: 'If the byte at the data pointer is nonzero, then instead of moving the instruction pointer forward to the next command, jump it back to the command after the matching [ command.'\n    },\n]\n\nexport default function CommandsTable() {\n    return (\n        <TableContainer component={Paper}>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Character</TableCell>\n                        <TableCell align=\"center\">Meaning</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                { commands.map( command => {\n                    return (\n                        <TableRow key={command.character}>\n                            <TableCell component=\"th\" scope=\"row\">{command.character}</TableCell>\n                            <TableCell align=\"center\">{command.meaning}</TableCell>\n                        </TableRow>\n                    )\n                })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n","import React, { useState } from 'react'\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions,\n         Button, TextField } from '@material-ui/core'\n\nexport default function InputDialog(props) {\n    const {open, onClose, onInputAccept } = props\n\n    const [value, setValue] = useState('');\n\n    const handleValueChange = (event) => {\n        if(value === '' || event.target.value === '')\n            setValue(event.target.value)\n    }\n\n    return (\n        <Dialog open={open} onClose={onClose} aria-labelledby=\"input-dialog-title\">\n            <DialogTitle id=\"input-dialog-title\">Input</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Input required\n                </DialogContentText>\n                <TextField \n                    autoFocus\n                    value={value} \n                    onChange={handleValueChange} \n                    margin=\"dense\" \n                    label=\"Input\" \n                    fullWidth/>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={() => {\n                    onInputAccept(value)\n                    setValue('')\n                    }} color=\"primary\">\n                    Ok\n                </Button>\n            </DialogActions>\n      </Dialog>\n    )\n}\n","import React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { Container, TextField, FormControlLabel, Checkbox, Box, Button, Switch, Fab,\n         Tabs, Tab, Tooltip, BottomNavigation, BottomNavigationAction, Typography, Slider, Divider,\n         makeStyles, useMediaQuery } from '@material-ui/core'\nimport TabPanel from './TabPanel'\nimport UploadButton from './UploadButton'\nimport CommandsTable from './CommandsTable'\nimport InputDialog from './InputDialog'\nimport EditIcon from '@material-ui/icons/Edit'\nimport InfoIcon from '@material-ui/icons/Info'\nimport BuildIcon from '@material-ui/icons/Build'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\n\nconst styles = makeStyles( theme => ({\n    root: {\n        display: 'flex',\n        height: '100%',\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n            paddingBottom: theme.spacing(8),\n          },\n    },\n    editorPanel: {\n        margin: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        flex: '3 1 75%',\n        '&>*':{\n            margin: theme.spacing(1)\n        },\n    },\n    sidePanel: {\n        margin: theme.spacing(1),\n        flexDirection: 'column',\n        display: 'flex',\n        flex: '1 1 25%',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    buttons:{\n        display: 'flex',\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n        '&>*':{\n            marginRight: theme.spacing(2)\n        }\n    },\n    fab: {\n        position: 'fixed',\n        display: 'none',\n        bottom: theme.spacing(8),\n        right: theme.spacing(2),\n        [theme.breakpoints.down('sm')]: {\n            display: 'flex',\n            alignItems: 'center',\n        }\n    },\n    options:{\n        display: 'flex',\n        flexDirection: 'column',\n        '&>*':{\n            margin: theme.spacing(1),\n        }\n    },\n    bottomNavigation:{\n        alignItems: 'center',\n        display: 'none',\n        position: 'fixed',\n        bottom: 0,\n        width: '100%',\n        zIndex: theme.zIndex.appBar,\n        [theme.breakpoints.down('sm')]: {\n            display: 'flex',\n        },\n    }\n\n}))\n\n\nfunction cleanup(code){\n    if(code !== '')\n        return code.match(/[<>+-.,[\\]]/g).join(\"\")\n    else return ''\n}\n\n\nfunction evaluate(code, memorySize, input){\n    let bracemap = buildbracemap(code)\n    let cells = [0]\n    let cellptr = 0\n    let codeptr = 0\n    let inputptr = 0\n    let output = ''\n    while (codeptr < code.length){\n\n        let command = code.charAt(codeptr)\n    \n        if (command === \">\"){\n            cellptr += 1\n            if (memorySize !== -1 && cellptr >= memorySize)\n                cellptr = 0\n            else if(cellptr >= cells.length)\n                cells.push(0)\n        }\n            \n        if (command === \"<\"){\n            if (cellptr <= 0) \n            cellptr = 0 \n            else cellptr -= 1\n        }\n\n        if (command === \"+\"){\n            if (cells[cellptr] < 255)\n                cells[cellptr] += 1\n            else cells[cellptr] = 0\n        }\n        \n        if (command === \"-\"){\n            if (cells[cellptr] > 0) \n                cells[cellptr] -= 1\n            else cells[cellptr] = 255\n        }\n        \n        if (command === \"[\" && cells[cellptr] === 0){\n            codeptr = bracemap[codeptr] \n        }\n        if (command === \"]\" && cells[cellptr] !== 0){ \n            codeptr = bracemap[codeptr] \n        }\n        if (command === \".\")\n            output = output.concat(String.fromCharCode(cells[cellptr]))\n        if (command === \",\"){\n            if(input.charAt(inputptr)){\n                cells[cellptr] = input.charCodeAt(inputptr)\n                inputptr += 1\n            }\n        } \n        codeptr += 1\n    }\n    return output\n}\n\nfunction buildbracemap(code){\n    let temp_bracestack = []\n    let bracemap = {}\n\n    for (let index = 0; index < code.length; index++ ){\n        let command = code.charAt(index)\n        if(command === \"[\" ){\n            temp_bracestack.push(index)\n        } \n        if(command === \"]\"){\n            let start = temp_bracestack.pop()\n            bracemap[start] = index\n            bracemap[index] = start\n        }\n    }\n    return bracemap\n}\n\nexport default function App() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n    const [useDarkTheme, setUseDarkTheme] = useState(prefersDarkMode);\n\n    const theme = useMemo(() =>\n        createMuiTheme({\n            palette: {\n                type: prefersDarkMode || useDarkTheme ? 'dark' : 'light',\n                primary: {\n                    main: '#03a9f4',\n                },\n                secondary: {\n                   main: '#4caf50',\n                },\n            },\n            shape: {\n                borderRadius: 0,\n            },\n            overrides: {\n                MuiCssBaseline:{\n                    '@global': {\n                        html: {\n                            overflowY: 'scroll',\n                        },\n                    }\n                },\n            }\n        }),\n        [prefersDarkMode, useDarkTheme],\n      );\n\n    const classes = styles()\n    const isSmDevice = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [code, setCode] = useState('')\n    const [input, setInput] = useState('')\n    const [output, setOutput] = useState('')\n    const [dynamicMemory, setDynamicMemory] = useState(true)\n    const [promptInput, setPromptInput] = useState(true)\n    const [cellsNumber, setCellsNumber] = useState(30000)\n    const [sideTab, setSideTab] = useState(0)\n    const [renderView, setRenderView] = useState(0)\n    const [inputSize, setInputSize] = useState(15)\n    const [outputSize, setOutputSize] = useState(8)\n    const [isInputDialogOpen, setIsInputDialogOpen] = useState(false)\n    \n    const run = useCallback(() => {\n      if(code !== ''){\n        if(promptInput && code.match(/,/g) && (code.match(/,/g).length - input.length) > 0 )\n            setIsInputDialogOpen(true)\n        else setOutput(evaluate(code, dynamicMemory ? -1 : cellsNumber, input))\n        \n      }\n    },[code, input, cellsNumber, promptInput, dynamicMemory])\n\n    useEffect(() => {\n        if(isInputDialogOpen){\n            setIsInputDialogOpen(false)\n            run()\n        }\n    }, [input, isInputDialogOpen, run])\n\n    const readFile = (event) => {\n        let file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader()\n            reader.onload = async (e) => { setCode(cleanup(e.target.result))};\n            reader.readAsText(file)\n        }\n    }\n\n    const editorPanel = (\n        <Box className={classes.editorPanel}>\n            <TextField \n                rows={inputSize} \n                multiline\n                value={code}\n                onChange={(e) => setCode(cleanup(e.target.value)) } \n                variant=\"outlined\" \n                helperText=\"Insert code here\"/>\n            <TextField \n                label=\"Input\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)} \n                variant=\"outlined\"/>\n            <Box className={classes.buttons}>\n                <Button color=\"primary\" variant=\"contained\" onClick={run}>Run</Button>\n                <Button color=\"primary\" variant=\"contained\" onClick={() => setOutput('') }>Clear output</Button>\n                <UploadButton color=\"primary\" variant=\"contained\" accept=\"text/*\" onChange={readFile} >Upload file</UploadButton>\n            </Box>\n            <TextField\n                label=\"Output\"\n                variant=\"outlined\"\n                rows={outputSize}\n                multiline\n                value={output}\n                InputProps={{\n                    readOnly: true,\n                }}\n            />\n            <Tooltip title=\"Run\" aria-label=\"run\">\n                <Fab color=\"primary\" onClick={run} className={classes.fab}>\n                    <PlayArrowIcon />\n                </Fab>\n            </Tooltip>\n        </Box>)\n\n    const optionsPanel = (\n        <Box className={classes.options}>\n            <Typography variant=\"h6\">General options</Typography>\n            <Divider />\n            <FormControlLabel\n                control={\n                <Checkbox \n                    checked={dynamicMemory}\n                    color=\"primary\"\n                    onChange={(e) => setDynamicMemory(e.target.checked)}\n                />\n                }\n                label=\"Dynamic memory\"\n            />\n            <TextField \n                label=\"Max cells\"\n                disabled={dynamicMemory} \n                value={cellsNumber}\n                onChange={(e) => setCellsNumber(e.target.value)}\n                type=\"number\" \n                variant=\"outlined\"\n            />\n            <FormControlLabel\n                    control={\n                    <Checkbox \n                        checked={promptInput}\n                        color=\"primary\"\n                        onChange={(e) => setPromptInput(e.target.checked)}\n                    />\n                    }\n                    label=\"Prompt for input\"\n                />\n            <Typography variant=\"h6\">Editor options</Typography>\n            <Divider />\n            <FormControlLabel\n                control={\n                <Switch\n                    checked={useDarkTheme}\n                    onChange={(e) => setUseDarkTheme(e.target.checked)}\n                    color=\"primary\"\n                />\n                }\n                label=\"Use dark theme\"\n            />\n            <Typography >Input field size</Typography>\n            <Slider\n                defaultValue={15}\n                valueLabelDisplay=\"auto\"\n                step={1}\n                marks\n                min={5}\n                max={20}\n                value={inputSize}\n                onChange={(e, newValue) => setInputSize(newValue)}\n            />\n            <Typography >Output field size</Typography>\n            <Slider\n                defaultValue={8}\n                marks\n                valueLabelDisplay=\"auto\"\n                step={1}\n                min={2}\n                max={20}\n                value={outputSize}\n                onChange={(e, newValue) => setOutputSize(newValue)}\n            />\n        </Box>)\n\n    const views = [editorPanel, <CommandsTable />, optionsPanel]\n    const mainView = isSmDevice ? views[renderView] : editorPanel \n\n    return (\n        <ThemeProvider theme={ theme }>\n            <CssBaseline />\n            <Container className={classes.root}>\n                { mainView }  \n                <Box className={classes.sidePanel}>\n                    <Tabs indicatorColor=\"primary\" value={sideTab} onChange={ (e, newValue ) => { setSideTab(newValue); } }>\n                            <Tab label=\"Options\" />\n                            <Tab label=\"Commands\" />\n                    </Tabs>\n                    <TabPanel value={sideTab} index={0}>\n                        {optionsPanel}\n                    </TabPanel>\n                    <TabPanel value={sideTab} index={1}>\n                        <CommandsTable />\n                    </TabPanel>\n                </Box>\n            </Container>\n            <BottomNavigation \n                    showLabels \n                    className={classes.bottomNavigation}\n                    value={renderView}\n                    onChange={ (e, newValue ) => { setRenderView(newValue) } }\n                    >\n                    <BottomNavigationAction label=\"Editor\" icon={<EditIcon />} />\n                    <BottomNavigationAction label=\"Commands table\" icon={<InfoIcon />} />\n                    <BottomNavigationAction label=\"Options\" icon={<BuildIcon />} />\n            </BottomNavigation>\n            <InputDialog \n                open={isInputDialogOpen} \n                onClose={() => setIsInputDialogOpen(false)}\n                onInputAccept={(value) =>setInput(input.concat(value))}\n            />\n        </ThemeProvider>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}